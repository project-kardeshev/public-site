{"version":3,"file":"Dao-Bp251QHt.js","sources":["../../src/components/modals/Vote.tsx","../../src/components/modals/ViewProposal.tsx","../../src/components/tables/DAOProposalsTable.tsx","../../src/pages/Dao.tsx"],"sourcesContent":["import { notificationEmitter } from '@src/services/events';\nimport { useGlobalState } from '@src/services/state/useGlobalState';\nimport { useState } from 'react';\nimport { VoteType } from 'types/dao';\n\nimport NumberInput from '../NumberInput';\n\nfunction Vote({\n  visible,\n  setVisibility,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  proposalId,\n}: {\n  visible: boolean;\n  setVisibility: (visible: boolean) => void;\n  proposalId: string;\n}) {\n  const [vote, setVote] = useState<VoteType>('yay');\n  const [stakeAmount, setStakeAmount] = useState(0);\n  const { kardBalance, aoDataProvider } = useGlobalState();\n  const [loading, setLoading] = useState(false);\n\n  function close() {\n    setVisibility(false);\n  }\n\n  async function voteOnProposal() {\n    try {\n      setLoading(true);\n      const id = await aoDataProvider.vote({\n        proposalId,\n        vote,\n        stakeAmount,\n      });\n      notificationEmitter.emit('info', 'Vote submitted, Transaction ID: ' + id);\n    } catch (e) {\n      console.error(e);\n    } finally {\n      setLoading(false);\n      close();\n    }\n  }\n\n  if (!visible) return <></>;\n  if (loading) return;\n  return (\n    <div\n      className=\"absolute left-0 top-0 z-50 flex size-full items-center justify-center bg-black/75 bg-opacity-50\"\n      data-test-id=\"vote-modal-container\"\n    >\n      <div\n        className=\"flex size-1/2 flex-col rounded-lg border-2 border-control-secondary bg-surface-secondary p-4\"\n        data-test-id=\"vote-modal-container\"\n      >\n        <h1 className=\"flex w-full justify-center p-4 text-2xl\">\n          Vote&nbsp;\n          <span className={`${vote === 'nay' ? 'text-error' : 'text-success'}`}>\n            {vote}\n          </span>\n        </h1>\n        <div className=\"border-box flex size-full flex-col justify-center gap-5\">\n          <div className=\"flex size-full flex-row gap-5\">\n            <button\n              onClick={() => setVote('yay')}\n              className={`w-full rounded-lg border-2 border-text-secondary bg-background/75 p-2 text-4xl hover:border-success hover:text-success ${vote === 'yay' ? 'text-success' : ''}`}\n            >\n              Yay\n            </button>\n            <button\n              onClick={() => setVote('nay')}\n              className={`w-full rounded-lg border-2 border-text-secondary bg-background/75 p-2 text-4xl hover:border-error  hover:text-error ${vote === 'nay' ? 'text-error' : ''}`}\n            >\n              Nay\n            </button>\n          </div>\n          <div className=\"w-full\">\n            <span className=\"w-full\">\n              STAKE {stakeAmount} $KARD FOR&nbsp;\n              <span className={vote === 'yay' ? 'text-success' : 'text-error'}>\n                {vote}\n              </span>\n            </span>\n            <NumberInput\n              value={stakeAmount}\n              setValue={(v: number) => setStakeAmount(v)}\n              placeholder=\"Stake Amount\"\n              min={0}\n              max={kardBalance}\n              step={1}\n            />\n          </div>\n        </div>\n        <div\n          className=\"flex w-full flex-row items-center justify-between gap-5 p-2\"\n          data-test-id=\"vote-modal-controls\"\n        >\n          {kardBalance < 1 ? (\n            <span className=\"text-error\">\n              Insufficient $KARD balance - mint more\n            </span>\n          ) : (\n            <span className=\"flex items-center justify-center text-text-secondary\">\n              $KARD Balance: {kardBalance}\n            </span>\n          )}\n          <div className=\"flex items-center justify-center gap-5\">\n            <button\n              className=\"rounded border-2 border-black/0 bg-control-secondary/10 p-1 text-text-primary/50 hover:border-error/50 hover:bg-surface-secondary hover:text-error/50\"\n              onClick={close}\n              data-test-id=\"vote-modal-close-button\"\n            >\n              Cancel\n            </button>\n            <button\n              className={`rounded border-2 border-highlight/0 p-1 hover:bg-surface-secondary ${vote === 'yay' ? 'bg-success/10 text-success hover:border-highlight  hover:text-highlight' : 'bg-error/10 text-error hover:border-error'}`}\n              onClick={voteOnProposal}\n              data-test-id=\"vote-modal-close-button\"\n            >\n              Vote\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Vote;\n","import {\n  arweave,\n  estimateDeadlineDate,\n  getTotalVotes,\n  shortTransactionId,\n} from '@src/utils';\nimport { Avatar, List, Tag } from 'antd';\nimport Account, { ArAccount } from 'arweave-account';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Proposal } from 'types/dao';\n\nimport Spinner from '../loading/Spinner';\nimport Vote from './Vote';\n\nfunction ViewProposal({\n  visible,\n  setVisibility,\n  proposal,\n}: {\n  visible: boolean;\n  setVisibility: (visible: boolean) => void;\n  proposal?: Proposal;\n}) {\n  const [authorProfile, setAuthorProfile] = useState<ArAccount>();\n  const [showVoteModal, setShowVoteModal] = useState(false);\n  const [votes, setVotes] = useState({ yay: 0, nay: 0 });\n  const [deadlineMs, setDeadlineMs] = useState(Date.now());\n\n  useEffect(() => {\n    if (!proposal) return;\n    const descriptionElement = document.getElementById('proposal-description');\n    if (descriptionElement) {\n      descriptionElement.innerHTML = proposal.description;\n    }\n    new Account().get(proposal.author).then((account: ArAccount) => {\n      setAuthorProfile(account);\n    });\n    console.log(proposal);\n    if (proposal) {\n      setVotes(getTotalVotes(proposal.votes));\n      updateDeadline(proposal);\n    }\n  }, [proposal]);\n\n  function close() {\n    setVisibility(false);\n  }\n\n  async function updateDeadline(p: Proposal) {\n    const currentBlockHeight = await arweave.network\n      .getInfo()\n      .then((info) => info.height);\n    const deadline = estimateDeadlineDate(p.deadline, currentBlockHeight);\n    setDeadlineMs(deadline);\n  }\n\n  if (!visible) return <></>;\n  if (!proposal)\n    return (\n      <div\n        className=\"absolute left-0 top-0 z-50 flex size-full items-center justify-center bg-black/75 bg-opacity-50\"\n        data-test-id=\"create-proposal-modal-container\"\n      >\n        {' '}\n        <Spinner size={200} />{' '}\n      </div>\n    );\n  return (\n    <div\n      className=\"absolute left-0 top-0 z-50 flex size-full items-center justify-center bg-black/75 bg-opacity-50\"\n      data-test-id=\"view-proposal-modal-container\"\n    >\n      <div\n        className=\"flex size-3/4 flex-col gap-5 rounded-lg border-2 border-control-secondary bg-surface-secondary p-4\"\n        data-test-id=\"view-proposal-modal-container\"\n      >\n        <h1 className=\"flex w-full justify-center p-4 text-2xl\">\n          {proposal.title}\n        </h1>\n        <div className=\"border-box flex size-full flex-row items-center justify-center gap-5\">\n          <div\n            className=\"size-full rounded bg-surface-primary p-2\"\n            id=\"proposal-description\"\n          ></div>\n          <div className=\"h-full w-2/5 rounded bg-surface-primary p-2\">\n            <List>\n              <List.Item>\n                <List.Item.Meta\n                  title=\"ID\"\n                  description={\n                    <Link\n                      to={`https://arscan.io/tx/${proposal.id}`}\n                      target=\"_blank\"\n                    >\n                      {shortTransactionId(proposal.id)}\n                    </Link>\n                  }\n                />\n              </List.Item>\n              <List.Item>\n                <List.Item.Meta\n                  title=\"Author\"\n                  description={\n                    <Link\n                      to={`https://arscan.io/address/${proposal.author}`}\n                      target=\"_blank\"\n                    >\n                      {authorProfile?.profile.handleName ??\n                        shortTransactionId(proposal.author)}{' '}\n                      <Avatar src={authorProfile?.profile.avatarURL} />\n                    </Link>\n                  }\n                />\n              </List.Item>\n              <List.Item>\n                <List.Item.Meta\n                  title=\"Votes\"\n                  description={\n                    <div className=\"flex items-center justify-between\">\n                      <span>\n                        Yay: {votes.yay} | Nay: {votes.nay}\n                      </span>\n                      <button\n                        onClick={() => setShowVoteModal(true)}\n                        className=\"rounded bg-control-secondary p-1 text-text-primary hover:bg-surface-secondary hover:text-highlight\"\n                      >\n                        Vote\n                      </button>\n                    </div>\n                  }\n                />\n              </List.Item>\n              <List.Item>\n                <List.Item.Meta\n                  title=\"Status\"\n                  description={\n                    <Tag color={proposal.status === 'active' ? 'green' : 'red'}>\n                      {proposal.status}\n                    </Tag>\n                  }\n                />\n              </List.Item>\n              <List.Item>\n                <List.Item.Meta\n                  title={`Estimated Deadline [block ${proposal.deadline}]`}\n                  description={new Date(deadlineMs).toDateString()}\n                />\n              </List.Item>\n            </List>\n          </div>\n        </div>\n        <div\n          className=\"flex w-full flex-row justify-end gap-5\"\n          data-test-id=\"view-proposal-modal-controls\"\n        >\n          <button\n            className=\"w-full rounded border-2 border-black/0 bg-control-secondary/10 p-1 text-text-primary/50 hover:border-error/50 hover:bg-surface-secondary hover:text-error/50\"\n            onClick={close}\n            data-test-id=\"view-proposal-modal-close-button\"\n          >\n            Close\n          </button>\n        </div>\n      </div>\n      <Vote\n        visible={showVoteModal}\n        setVisibility={setShowVoteModal}\n        proposalId={proposal.id}\n      />\n    </div>\n  );\n}\n\nexport default ViewProposal;\n","import { useGlobalState } from '@src/services/state/useGlobalState';\nimport { getTotalVotes, shortTransactionId } from '@src/utils';\nimport { Space, Tag } from 'antd';\nimport { startCase } from 'lodash';\nimport { useState } from 'react';\nimport { Proposal } from 'types/dao';\n\nimport ViewProposal from '../modals/ViewProposal';\nimport { DataColumn, DataTable } from './common';\n\nconst stubData: Proposal[] = [\n  {\n    title: 'Proposal 1',\n    id: '0x123'.padEnd(43, '0'),\n\n    description: 'This is a proposal',\n    votes: {\n      ['b'.padEnd(43, '1')]: { yay: 1, nay: 0 },\n    },\n    status: 'active',\n    author: '7waR8v4STuwPnTck1zFVkQqJh5K9q9Zik4Y5-5dV7nk',\n    deadline: Date.now(),\n  },\n];\n\nfunction daoProposalsColumnsGenerator(\n  data: Record<string, any>,\n  viewProposal: (proposal: Proposal) => void,\n): DataColumn[] {\n  const renderKeys = ['title', 'id', 'votes', 'status', 'action'];\n\n  const columns = Object.keys({ ...data, action: '' })\n    .map((key, index) => {\n      if (!renderKeys.includes(key)) {\n        return;\n      }\n      return new DataColumn({\n        key: index.toString(),\n        title: startCase(key),\n        dataIndex: key,\n        render: (value: any, record: Record<any, any>) => {\n          switch (key) {\n            case 'title':\n              return value;\n            case 'id':\n              return shortTransactionId(value);\n            case 'votes': {\n              const parsed = getTotalVotes(value);\n              return (\n                <span>\n                  yay: {parsed?.yay} | nay: {parsed?.nay}\n                </span>\n              );\n            }\n            case 'status':\n              return (\n                <Space>\n                  <Tag color={value === 'active' ? 'green' : 'red'}>\n                    {value}\n                  </Tag>\n                </Space>\n              );\n            case 'action':\n              return (\n                <button\n                  className=\"rounded bg-control-secondary p-1 text-text-primary hover:bg-surface-secondary hover:text-highlight\"\n                  onClick={() => viewProposal(record as Proposal)}\n                >\n                  View\n                </button>\n              );\n            default:\n              return value;\n          }\n        },\n      });\n    })\n    .filter((column) => column !== undefined) as DataColumn[];\n  return columns;\n}\n\nfunction DAOProposalsTable() {\n  const { aoDataProvider } = useGlobalState();\n  const [showViewProposal, setShowViewProposal] = useState(false);\n  const [proposal, setProposal] = useState<Proposal>();\n  const [dataRequestKey, setDataRequestKey] = useState(\n    'dao-proposals' + Date.now(),\n  );\n\n  function refresh() {\n    setDataRequestKey('dao-proposals' + Date.now());\n  }\n\n  const proposalsFetcher = async () => {\n    const proposals = await aoDataProvider.getProposals();\n    const data = Object.entries(proposals).map(([key, value]) => {\n      return {\n        id: key,\n        ...value,\n      };\n    });\n    return data;\n  };\n\n  return (\n    <>\n      <DataTable\n        columnGenerator={(a) =>\n          daoProposalsColumnsGenerator(a, (proposal: Proposal) => {\n            setProposal(proposal);\n            setShowViewProposal(true);\n          })\n        }\n        defaultColumns={daoProposalsColumnsGenerator(\n          stubData[0],\n          (proposal) => {\n            setProposal(proposal);\n            setShowViewProposal(true);\n          },\n        )}\n        requestCacheKey={dataRequestKey}\n        dataFetcher={proposalsFetcher}\n      />\n\n      <ViewProposal\n        visible={showViewProposal}\n        setVisibility={(visible: boolean) => {\n          if (!visible) {\n            setProposal(undefined);\n          }\n          setShowViewProposal(visible);\n          refresh();\n        }}\n        proposal={proposal}\n      />\n    </>\n  );\n}\n\nexport default DAOProposalsTable;\n","import DAOProposalsTable from '../components/tables/DAOProposalsTable';\n\nfunction Dao() {\n  return (\n    <div className={'flex size-full flex-col'}>\n      <div className=\"flex w-full flex-row justify-between p-2\">\n        <div>\n          <h1 className=\"text-xl text-text-secondary\">DAO</h1>\n        </div>\n\n        <div></div>\n      </div>\n      <DAOProposalsTable />\n    </div>\n  );\n}\n\nexport default Dao;\n"],"names":["Vote","visible","setVisibility","proposalId","vote","setVote","reactExports","stakeAmount","setStakeAmount","kardBalance","aoDataProvider","useGlobalState","loading","setLoading","close","voteOnProposal","id","notificationEmitter","e","jsxRuntimeExports","NumberInput","v","ViewProposal","proposal","authorProfile","setAuthorProfile","showVoteModal","setShowVoteModal","votes","setVotes","deadlineMs","setDeadlineMs","descriptionElement","_default","account","getTotalVotes","updateDeadline","p","currentBlockHeight","arweave","info","deadline","estimateDeadlineDate","List","Link","shortTransactionId","Avatar","Tag","Spinner","stubData","daoProposalsColumnsGenerator","data","viewProposal","renderKeys","key","index","DataColumn","lodashExports","value","record","parsed","Space","column","DAOProposalsTable","showViewProposal","setShowViewProposal","setProposal","dataRequestKey","setDataRequestKey","refresh","proposalsFetcher","proposals","DataTable","a","proposal2","Dao"],"mappings":"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"}